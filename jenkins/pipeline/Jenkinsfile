pipeline {
    agent any
    
    stages {
        
        stage('Terraform') {

            agent {
                dockerfile {
                    filename 'Dockerfile'
                    dir 'jenkins/terraform-slave'
                    // mount workspace with pulled repository so terraform state is not lost + pass tokens as env file
                    args '-v $WORKSPACE:/var/git --env-file $HOME/creds.env'
                }
            }
            
            steps {
                sh 'cd /var/git/terraform && terraform init && terraform destroy -auto-approve'
            }
            
        }

        stage('Ansible') {

            agent {
                dockerfile {
                    filename 'Dockerfile'
                    dir 'jenkins/ansible-slave'
                    args '-u 0:0 -v $WORKSPACE:/var/git --env-file $HOME/creds.env'
                   // args '-e ANSIBLE_SSH_CONTROL_PATH_DIR=/tmp/.ansible/ansible-cp -e ANSIBLE_LOCAL_TEMP=/tmp/.ansible/ansible-tmp -e DEFAULT_LOCAL_TMP=/tmp/.ansible/default-tmp'
                }
            }

            steps {
                sh 'chmod 400 /var/git/terraform/ec2-rsa.pem'
                sh 'cd /var/git/ansible && ansible-playbook playbook.yml'
            }
            
        }

        
    }
}

