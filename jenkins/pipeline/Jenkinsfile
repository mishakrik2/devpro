pipeline {
    agent any
    
    stages {
        
        stage('Terraform') {

            agent {
                dockerfile {
                    filename 'Dockerfile'
                    dir 'jenkins/terraform-slave'
                    // mount workspace with pulled repository so terraform state is not lost + pass tokens as env file
                    args '-v $WORKSPACE:/var/git --env-file $HOME/creds.env'
                }
            }
            
            steps {
                sh 'cd /var/git/terraform && terraform init && terraform apply -auto-approve'
            }
            
        }

        stage('Ansible') {

            agent {
                dockerfile {
                    filename 'Dockerfile'
                    dir 'jenkins/ansible-slave'
                    args '-v $WORKSPACE:/var/git -e ANSIBLE_LOCAL_TEMP=/tmp/.ansible/tmp --env-file $HOME/creds.env'
                }
            }

            steps {
                sh 'find /tmp/.ansible/tmp | grep ec2.ini'
                sh 'grep destination_variable ./usr/lib/python3.9/site-packages/ansible_collections/community/aws/scripts/inventory/ec2.ini'
                sh 'cd /var/git/ansible && ansible-playbook playbook.yml'
            }
            
        }
        
    }
}

